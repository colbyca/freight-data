volumes:
  server_node_modules:
  client_node_modules:
  db_worker_node_modules:
  db_worker_python_packages:
  db_data:
  cache:
services:
  db:
    image: postgis/postgis:latest
    container_name: freight_db
    env_file:
      - ./server/.env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  server:
    build:
      context: ./server
    container_name: freight_server
    volumes:
      - ./server:/app
      - ./prisma:/app/prisma
      - server_node_modules:/app/node_modules
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh
    ports:
      - "3000:3000"
    env_file:
      - ./server/.env
    depends_on:
      - db
      - cache
      - rabbitmq

  client:
    build:
      context: ./client
    container_name: freight_client
    volumes:
      - ./client:/app
      - client_node_modules:/app/node_modules
    ports:
      - "5173:5173"

  db_worker:
    build:
      context: ./db_worker
    container_name: freight_db_worker
    volumes:
      - ./db_worker:/app
      - db_worker_node_modules:/app/node_modules
      - db_worker_python_packages:/opt/venv/lib/python3.12/site-packages/
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh
    env_file:
      - ./db_worker/.env
    depends_on:
      - db
      - cache
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 10s
      timeout: 5s
      retries: 5
